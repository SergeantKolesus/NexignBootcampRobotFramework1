<?xml version="1.0" encoding="UTF-8"?>
<<<<<<< Updated upstream
<robot generator="Robot 4.0.2 (Python 3.9.0 on win32)" generated="20210602 19:30:36.233" rpa="false" schemaversion="2">
<suite id="s1" name="RobotFramework1" source="G:\Nexign\RobotFramework1">
<suite id="s1-s1" name="Task one" source="G:\Nexign\RobotFramework1\Task_one.robot">
<test id="s1-s1-t1" name="Min and max test">
=======
<robot generator="Robot 4.0.2 (Python 3.9.0 on win32)" generated="20210604 03:28:07.454" rpa="false" schemaversion="2">
<suite id="s1" name="RobotFramework1" source="G:\Nexign\RobotFramework1">
<suite id="s1-s1" name="Homework2" source="G:\Nexign\RobotFramework1\Homework2.robot">
<test id="s1-s1-t1" name="Multiple base search SQL test">
<kw name="Test Setup" type="SETUP">
<kw name="Create Session" library="Req">
<arg>alias</arg>
<arg>http://localhost:3000</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210604 03:28:07.906" level="INFO">Creating Session using : alias=alias, url=http://localhost:3000, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210604 03:28:07.906" endtime="20210604 03:28:07.907"/>
</kw>
<kw name="Connect To Postgresql" library="DB">
<arg>hadb</arg>
<arg>authenticator</arg>
<arg>mysecretpassword</arg>
<arg>localhost</arg>
<arg>8432</arg>
<doc>Connection to Postgres DB.</doc>
<status status="PASS" starttime="20210604 03:28:07.907" endtime="20210604 03:28:07.940"/>
</kw>
<status status="PASS" starttime="20210604 03:28:07.906" endtime="20210604 03:28:07.940"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${params}</var>
<arg>amount=5</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210604 03:28:07.941" level="INFO">${params} = {'amount': '5'}</msg>
<status status="PASS" starttime="20210604 03:28:07.941" endtime="20210604 03:28:07.941"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${SQL}</var>
<arg>SELECT DISTINCT prod.prod_id, title FROM bootcamp.inventory AS inv INNER JOIN bootcamp.products AS prod ON inv.prod_id=prod.prod_id WHERE "quan_in_stock" &lt; %(amount)s</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210604 03:28:07.942" level="INFO">${SQL} = SELECT DISTINCT prod.prod_id, title FROM bootcamp.inventory AS inv INNER JOIN bootcamp.products AS prod ON inv.prod_id=prod.prod_id WHERE "quan_in_stock" &lt; %(amount)s</msg>
<status status="PASS" starttime="20210604 03:28:07.941" endtime="20210604 03:28:07.942"/>
</kw>
<kw name="Execute Sql String Mapped" library="DB">
<var>@{result}</var>
<arg>${SQL}</arg>
<arg>&amp;{params}</arg>
<doc>SQL query execution where each result row is mapped as a dict with column names as keys.</doc>
<msg timestamp="20210604 03:28:07.942" level="INFO" html="true">&lt;details&gt;&lt;summary&gt;Running PL/PGSQL statement&lt;/summary&gt;&lt;p&gt;SELECT DISTINCT prod.prod_id, title FROM bootcamp.inventory AS inv INNER JOIN bootcamp.products AS prod ON inv.prod_id=prod.prod_id WHERE &amp;quot;quan_in_stock&amp;quot; &amp;lt; %(amount)s&lt;/p&gt;&lt;/details&gt;</msg>
<msg timestamp="20210604 03:28:07.954" level="INFO" html="true">&lt;details&gt;&lt;summary&gt;SQL Query Result&lt;/summary&gt;&lt;p&gt;[{&amp;#x27;prod_id&amp;#x27;: 189, &amp;#x27;title&amp;#x27;: &amp;#x27;ACADEMY CREATURES&amp;#x27;}, {&amp;#x27;prod_id&amp;#x27;: 223, &amp;#x27;title&amp;#x27;: &amp;#x27;ACADEMY DESIRE&amp;#x27;}, {&amp;#x27;prod_id&amp;#x27;: 419, &amp;#x27;title&amp;#x27;: &amp;#x27;ACADEMY HOCUS&amp;#x27;}, {&amp;#x27;prod_id&amp;#x27;: 452, &amp;#x27;title&amp;#x27;: &amp;#x27;ACADEMY ILLUSION&amp;#x27;}, {&amp;#x27;prod_id&amp;#x27;: 543, &amp;#x27;title&amp;#x27;: &amp;#x27;ACADEMY MADIGAN&amp;#x27;}, {&amp;#x27;prod_id&amp;#x27;: 756, &amp;#x27;title&amp;#x27;: &amp;#x27;ACADEMY SADDLE&amp;#x27;}, {&amp;#x27;prod_id&amp;#x27;: 783, &amp;#x27;title&amp;#x27;: &amp;#x27;ACADEMY SHANE&amp;#x27;}, {&amp;#x27;prod_id&amp;#x27;: 852, &amp;#x27;title&amp;#x27;: &amp;#x27;ACADEMY STRANGELOVE&amp;#x27;}, {&amp;#x27;prod_id&amp;#x27;: 936, &amp;#x27;title&amp;#x27;: &amp;#x27;ACADEMY VANISHING&amp;#x27;}, {&amp;#x27;prod_id&amp;#x27;: 952, &amp;#x27;title&amp;#x27;: &amp;#x27;ACADEMY WAGON&amp;#x27;}]&lt;/p&gt;&lt;/details&gt;</msg>
<msg timestamp="20210604 03:28:07.955" level="INFO">@{result} = [ {'prod_id': 189, 'title': 'ACADEMY CREATURES'} | {'prod_id': 223, 'title': 'ACADEMY DESIRE'} | {'prod_id': 419, 'title': 'ACADEMY HOCUS'} | {'prod_id': 452, 'title': 'ACADEMY ILLUSION'} | {'prod_id'...</msg>
<status status="PASS" starttime="20210604 03:28:07.942" endtime="20210604 03:28:07.955"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${result}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210604 03:28:07.956" level="INFO">Length is 109</msg>
<msg timestamp="20210604 03:28:07.956" level="INFO">${count} = 109</msg>
<status status="PASS" starttime="20210604 03:28:07.955" endtime="20210604 03:28:07.956"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>${select_rows_count_SQL}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" starttime="20210604 03:28:07.956" endtime="20210604 03:28:07.956"/>
</kw>
<kw name="Test Teardown" type="TEARDOWN">
<kw name="Delete All Sessions" library="Req">
<doc>Removes all the session objects</doc>
<msg timestamp="20210604 03:28:07.957" level="INFO">Deleting All Sessions</msg>
<status status="PASS" starttime="20210604 03:28:07.957" endtime="20210604 03:28:07.957"/>
</kw>
<kw name="Disconnect From Postgresql" library="DB">
<doc>Close active PostgreSQL connection.
You will have to manually open or switch to a new connection.
Due to how ConnectionCache works, connection's index and alias are not removed from cache, so you are able to switch to
closed connection, if it was closed with Disconnect from Postgresql. It will still remain closed though.</doc>
<status status="PASS" starttime="20210604 03:28:07.957" endtime="20210604 03:28:07.958"/>
</kw>
<status status="PASS" starttime="20210604 03:28:07.957" endtime="20210604 03:28:07.958"/>
</kw>
<doc>Проверка поиска в двух таблицах при помощи SQL запроса</doc>
<status status="PASS" starttime="20210604 03:28:07.905" endtime="20210604 03:28:07.958"/>
</test>
<test id="s1-s1-t2" name="Multiple base search RESP request">
<kw name="Test Setup" type="SETUP">
<kw name="Create Session" library="Req">
<arg>alias</arg>
<arg>http://localhost:3000</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210604 03:28:07.960" level="INFO">Creating Session using : alias=alias, url=http://localhost:3000, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210604 03:28:07.959" endtime="20210604 03:28:07.960"/>
</kw>
<kw name="Connect To Postgresql" library="DB">
<arg>hadb</arg>
<arg>authenticator</arg>
<arg>mysecretpassword</arg>
<arg>localhost</arg>
<arg>8432</arg>
<doc>Connection to Postgres DB.</doc>
<status status="PASS" starttime="20210604 03:28:07.960" endtime="20210604 03:28:07.988"/>
</kw>
<status status="PASS" starttime="20210604 03:28:07.959" endtime="20210604 03:28:07.988"/>
</kw>
<kw name="Get On Session" library="Req">
<var>${resp}</var>
<arg>alias</arg>
<arg>/products?</arg>
<arg>params=select=title,inventory(quan_in_stock)&amp;title=like.ACADEMY*AD*</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20210604 03:28:08.056" level="INFO">GET Request : url=http://localhost:3000/products?select=title,inventory(quan_in_stock)&amp;title=like.ACADEMY*AD* 
 path_url=/products?select=title,inventory(quan_in_stock)&amp;title=like.ACADEMY*AD* 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210604 03:28:08.056" level="INFO">GET Response : url=http://localhost:3000/products?select=title,inventory(quan_in_stock)&amp;title=like.ACADEMY*AD* 
 status=200, reason=OK 
 headers={'Transfer-Encoding': 'chunked', 'Date': 'Fri, 04 Jun 2021 00:28:14 GMT', 'Server': 'postgrest/7.0.1 (UNKNOWN)', 'Content-Encoding': 'gzip', 'Content-Type': 'application/json; charset=utf-8', 'Content-Range': '0-31/*', 'Content-Location': '/products?select=title%2Cinventory%28quan_in_stock%29&amp;title=like.ACADEMY%2AAD%2A'} 
 body=[{"title":"ACADEMY ACADEMY","inventory":[{"quan_in_stock":138}]}, 
 {"title":"ACADEMY ADAPTATION","inventory":[{"quan_in_stock":228}]}, 
 {"title":"ACADEMY ALADDIN","inventory":[{"quan_in_stock":105}]}, 
 {"title":"ACADEMY AMADEUS","inventory":[{"quan_in_stock":389}]}, 
 {"title":"ACADEMY AMISTAD","inventory":[{"quan_in_stock":172}]}, 
 {"title":"ACADEMY BADMAN","inventory":[{"quan_in_stock":265}]}, 
 {"title":"ACADEMY BLADE","inventory":[{"quan_in_stock":212}]}, 
 {"title":"ACADEMY CADDYSHACK","inventory":[{"quan_in_stock":188}]}, 
 {"title":"ACADEMY CHARADE","inventory":[{"quan_in_stock":210}]}, 
 {"title":"ACADEMY CONEHEADS","inventory":[{"quan_in_stock":181}]}, 
 {"title":"ACADEMY CROSSROADS","inventory":[{"quan_in_stock":344}]}, 
 {"title":"ACADEMY CRUSADE","inventory":[{"quan_in_stock":265}]}, 
 {"title":"ACADEMY DADDY","inventory":[{"quan_in_stock":66}]}, 
 {"title":"ACADEMY DORADO","inventory":[{"quan_in_stock":149}]}, 
 {"title":"ACADEMY GLADIATOR","inventory":[{"quan_in_stock":336}]}, 
 {"title":"ACADEMY GRADUATE","inventory":[{"quan_in_stock":374}]}, 
 {"title":"ACADEMY HEAD","inventory":[{"quan_in_stock":30}]}, 
 {"title":"ACADEMY JADE","inventory":[{"quan_in_stock":307}]}, 
 {"title":"ACADEMY LADY","inventory":[{"quan_in_stock":268}]}, 
 {"title":"ACADEMY LADYBUGS","inventory":[{"quan_in_stock":240}]}, 
 {"title":"ACADEMY MADIGAN","inventory":[{"quan_in_stock":1}]}, 
 {"title":"ACADEMY MADISON","inventory":[{"quan_in_stock":466}]}, 
 {"title":"ACADEMY MADNESS","inventory":[{"quan_in_stock":282}]}, 
 {"title":"ACADEMY MADRE","inventory":[{"quan_in_stock":216}]}, 
 {"title":"ACADEMY PARADISE","inventory":[{"quan_in_stock":43}]}, 
 {"title":"ACADEMY PHILADELPHIA","inventory":[{"quan_in_stock":107}]}, 
 {"title":"ACADEMY ROAD","inventory":[{"quan_in_stock":319}]}, 
 {"title":"ACADEMY SADDLE","inventory":[{"quan_in_stock":2}]}, 
 {"title":"ACADEMY SILVERADO","inventory":[{"quan_in_stock":7}]}, 
 {"title":"ACADEMY SQUAD","inventory":[{"quan_in_stock":289}]}, 
 {"title":"ACADEMY TADPOLE","inventory":[{"quan_in_stock":339}]}, 
 {"title":"ACADEMY TRADING","inventory":[{"quan_in_stock":185}]}] 
 </msg>
<msg timestamp="20210604 03:28:08.056" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210604 03:28:07.988" endtime="20210604 03:28:08.056"/>
</kw>
<kw name="Get Elements" library="JsonValidator">
<var>${title}</var>
<arg>${resp.json()}</arg>
<arg>$..title</arg>
<doc>Get list of elements from _json_source_, matching [http://goessner.net/articles/JsonPath/|JSONPath] expression.</doc>
<msg timestamp="20210604 03:28:08.085" level="INFO">${title} = ['ACADEMY ACADEMY', 'ACADEMY ADAPTATION', 'ACADEMY ALADDIN', 'ACADEMY AMADEUS', 'ACADEMY AMISTAD', 'ACADEMY BADMAN', 'ACADEMY BLADE', 'ACADEMY CADDYSHACK', 'ACADEMY CHARADE', 'ACADEMY CONEHEADS', 'ACA...</msg>
<status status="PASS" starttime="20210604 03:28:08.056" endtime="20210604 03:28:08.085"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${title}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210604 03:28:08.085" level="INFO">Length is 32</msg>
<msg timestamp="20210604 03:28:08.085" level="INFO">${count} = 32</msg>
<status status="PASS" starttime="20210604 03:28:08.085" endtime="20210604 03:28:08.085"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>${select_rows_count_REST}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" starttime="20210604 03:28:08.086" endtime="20210604 03:28:08.086"/>
</kw>
<kw name="Test Teardown" type="TEARDOWN">
<kw name="Delete All Sessions" library="Req">
<doc>Removes all the session objects</doc>
<msg timestamp="20210604 03:28:08.086" level="INFO">Deleting All Sessions</msg>
<status status="PASS" starttime="20210604 03:28:08.086" endtime="20210604 03:28:08.087"/>
</kw>
<kw name="Disconnect From Postgresql" library="DB">
<doc>Close active PostgreSQL connection.
You will have to manually open or switch to a new connection.
Due to how ConnectionCache works, connection's index and alias are not removed from cache, so you are able to switch to
closed connection, if it was closed with Disconnect from Postgresql. It will still remain closed though.</doc>
<status status="PASS" starttime="20210604 03:28:08.087" endtime="20210604 03:28:08.087"/>
</kw>
<status status="PASS" starttime="20210604 03:28:08.086" endtime="20210604 03:28:08.087"/>
</kw>
<doc>Проверка поиска в двух таблицах при помощи RESP запроса</doc>
<status status="PASS" starttime="20210604 03:28:07.958" endtime="20210604 03:28:08.087"/>
</test>
<test id="s1-s1-t3" name="Table change SQL request">
<kw name="Test Setup" type="SETUP">
<kw name="Create Session" library="Req">
<arg>alias</arg>
<arg>http://localhost:3000</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210604 03:28:08.089" level="INFO">Creating Session using : alias=alias, url=http://localhost:3000, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210604 03:28:08.088" endtime="20210604 03:28:08.089"/>
</kw>
<kw name="Connect To Postgresql" library="DB">
<arg>hadb</arg>
<arg>authenticator</arg>
<arg>mysecretpassword</arg>
<arg>localhost</arg>
<arg>8432</arg>
<doc>Connection to Postgres DB.</doc>
<status status="PASS" starttime="20210604 03:28:08.089" endtime="20210604 03:28:08.111"/>
</kw>
<status status="PASS" starttime="20210604 03:28:08.088" endtime="20210604 03:28:08.111"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${insertion_params}</var>
<arg>category=17</arg>
<arg>name=Adult only</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210604 03:28:08.112" level="INFO">${insertion_params} = {'category': '17', 'name': 'Adult only'}</msg>
<status status="PASS" starttime="20210604 03:28:08.112" endtime="20210604 03:28:08.112"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${insertion_SQL}</var>
<arg>INSERT INTO bootcamp.categories (category, categoryname) values (%(category)s, %(name)s) returning category</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210604 03:28:08.113" level="INFO">${insertion_SQL} = INSERT INTO bootcamp.categories (category, categoryname) values (%(category)s, %(name)s) returning category</msg>
<status status="PASS" starttime="20210604 03:28:08.112" endtime="20210604 03:28:08.113"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${selection_params}</var>
<arg>category=17</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210604 03:28:08.114" level="INFO">${selection_params} = {'category': '17'}</msg>
<status status="PASS" starttime="20210604 03:28:08.113" endtime="20210604 03:28:08.114"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${selection_SQL}</var>
<arg>SELECT category FROM bootcamp.categories</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210604 03:28:08.114" level="INFO">${selection_SQL} = SELECT category FROM bootcamp.categories</msg>
<status status="PASS" starttime="20210604 03:28:08.114" endtime="20210604 03:28:08.114"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${raw_table_elements_count_SQL}</var>
<arg>SELECT COUNT(category) FROM bootcamp.categories</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210604 03:28:08.115" level="INFO">${raw_table_elements_count_SQL} = SELECT COUNT(category) FROM bootcamp.categories</msg>
<status status="PASS" starttime="20210604 03:28:08.114" endtime="20210604 03:28:08.115"/>
</kw>
<kw name="Execute Sql String" library="DB">
<var>@{raw_table_elements_count}</var>
<arg>${raw_table_elements_count_SQL}</arg>
<doc>Execute PL/PGSQL string.
For parametrized SQL queries please consider psycopg2 guide on the subject:
http://initd.org/psycopg/docs/usage.html#passing-parameters-to-sql-queries</doc>
<msg timestamp="20210604 03:28:08.115" level="INFO" html="true">&lt;details&gt;&lt;summary&gt;Running PL/PGSQL statement&lt;/summary&gt;&lt;p&gt;SELECT COUNT(category) FROM bootcamp.categories&lt;/p&gt;&lt;/details&gt;</msg>
<msg timestamp="20210604 03:28:08.120" level="INFO" html="true">&lt;details&gt;&lt;summary&gt;SQL Query Result&lt;/summary&gt;&lt;p&gt;[(16,)]&lt;/p&gt;&lt;/details&gt;</msg>
<msg timestamp="20210604 03:28:08.121" level="INFO">@{raw_table_elements_count} = [ (16,) ]</msg>
<status status="PASS" starttime="20210604 03:28:08.115" endtime="20210604 03:28:08.121"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${summary_params}</var>
<arg>category=17</arg>
<arg>name=Adult only</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210604 03:28:08.121" level="INFO">${summary_params} = {'category': '17', 'name': 'Adult only'}</msg>
<status status="PASS" starttime="20210604 03:28:08.121" endtime="20210604 03:28:08.121"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${summary_SQL}</var>
<arg>${insertion_SQL}; ${selection_SQL}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210604 03:28:08.122" level="INFO">${summary_SQL} = INSERT INTO bootcamp.categories (category, categoryname) values (%(category)s, %(name)s) returning category; SELECT category FROM bootcamp.categories</msg>
<status status="PASS" starttime="20210604 03:28:08.122" endtime="20210604 03:28:08.122"/>
</kw>
<kw name="Execute Sql String Mapped" library="DB">
<var>@{summary_result}</var>
<arg>${summary_SQL}</arg>
<arg>&amp;{summary_params}</arg>
<doc>SQL query execution where each result row is mapped as a dict with column names as keys.</doc>
<msg timestamp="20210604 03:28:08.122" level="INFO" html="true">&lt;details&gt;&lt;summary&gt;Running PL/PGSQL statement&lt;/summary&gt;&lt;p&gt;INSERT INTO bootcamp.categories (category, categoryname) values (%(category)s, %(name)s) returning category; SELECT category FROM bootcamp.categories&lt;/p&gt;&lt;/details&gt;</msg>
<msg timestamp="20210604 03:28:08.126" level="INFO" html="true">&lt;details&gt;&lt;summary&gt;SQL Query Result&lt;/summary&gt;&lt;p&gt;[{&amp;#x27;category&amp;#x27;: 1}, {&amp;#x27;category&amp;#x27;: 2}, {&amp;#x27;category&amp;#x27;: 3}, {&amp;#x27;category&amp;#x27;: 4}, {&amp;#x27;category&amp;#x27;: 5}, {&amp;#x27;category&amp;#x27;: 6}, {&amp;#x27;category&amp;#x27;: 7}, {&amp;#x27;category&amp;#x27;: 8}, {&amp;#x27;category&amp;#x27;: 9}, {&amp;#x27;category&amp;#x27;: 10}]&lt;/p&gt;&lt;/details&gt;</msg>
<msg timestamp="20210604 03:28:08.127" level="INFO">@{summary_result} = [ {'category': 1} | {'category': 2} | {'category': 3} | {'category': 4} | {'category': 5} | {'category': 6} | {'category': 7} | {'category': 8} | {'category': 9} | {'category': 10} | {'category': 11} ...</msg>
<status status="PASS" starttime="20210604 03:28:08.122" endtime="20210604 03:28:08.127"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${result_length}</var>
<arg>${summary_result}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210604 03:28:08.128" level="INFO">Length is 17</msg>
<msg timestamp="20210604 03:28:08.128" level="INFO">${result_length} = 17</msg>
<status status="PASS" starttime="20210604 03:28:08.127" endtime="20210604 03:28:08.128"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${proper_count}</var>
<arg>@{raw_table_elements_count}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210604 03:28:08.129" level="INFO">${proper_count} = 16</msg>
<status status="PASS" starttime="20210604 03:28:08.128" endtime="20210604 03:28:08.129"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${proper_count}</var>
<arg>${proper_count} + ${1}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210604 03:28:08.129" level="INFO">${proper_count} = 17</msg>
<status status="PASS" starttime="20210604 03:28:08.129" endtime="20210604 03:28:08.130"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${proper_count}</arg>
<arg>${result_length}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" starttime="20210604 03:28:08.130" endtime="20210604 03:28:08.130"/>
</kw>
<kw name="Test Teardown Insertions Cleaning" type="TEARDOWN">
<kw name="Create Dictionary" library="BuiltIn">
<var>${removing_params}</var>
<arg>category=17</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210604 03:28:08.131" level="INFO">${removing_params} = {'category': '17'}</msg>
<status status="PASS" starttime="20210604 03:28:08.130" endtime="20210604 03:28:08.131"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${removing_SQL}</var>
<arg>DELETE FROM bootcamp.categories where category=17 returning *</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210604 03:28:08.131" level="INFO">${removing_SQL} = DELETE FROM bootcamp.categories where category=17 returning *</msg>
<status status="PASS" starttime="20210604 03:28:08.131" endtime="20210604 03:28:08.131"/>
</kw>
<kw name="Execute Sql String" library="DB">
<var>@{removing_result}</var>
<arg>${removing_SQL}</arg>
<arg>&amp;{removing_params}</arg>
<doc>Execute PL/PGSQL string.
For parametrized SQL queries please consider psycopg2 guide on the subject:
http://initd.org/psycopg/docs/usage.html#passing-parameters-to-sql-queries</doc>
<msg timestamp="20210604 03:28:08.131" level="INFO" html="true">&lt;details&gt;&lt;summary&gt;Running PL/PGSQL statement&lt;/summary&gt;&lt;p&gt;DELETE FROM bootcamp.categories where category=17 returning *&lt;/p&gt;&lt;/details&gt;</msg>
<msg timestamp="20210604 03:28:08.134" level="INFO" html="true">&lt;details&gt;&lt;summary&gt;SQL Query Result&lt;/summary&gt;&lt;p&gt;[]&lt;/p&gt;&lt;/details&gt;</msg>
<msg timestamp="20210604 03:28:08.135" level="INFO">@{removing_result} = [ ]</msg>
<status status="PASS" starttime="20210604 03:28:08.131" endtime="20210604 03:28:08.135"/>
</kw>
<kw name="Test Teardown">
<kw name="Delete All Sessions" library="Req">
<doc>Removes all the session objects</doc>
<msg timestamp="20210604 03:28:08.135" level="INFO">Deleting All Sessions</msg>
<status status="PASS" starttime="20210604 03:28:08.135" endtime="20210604 03:28:08.135"/>
</kw>
<kw name="Disconnect From Postgresql" library="DB">
<doc>Close active PostgreSQL connection.
You will have to manually open or switch to a new connection.
Due to how ConnectionCache works, connection's index and alias are not removed from cache, so you are able to switch to
closed connection, if it was closed with Disconnect from Postgresql. It will still remain closed though.</doc>
<status status="PASS" starttime="20210604 03:28:08.135" endtime="20210604 03:28:08.136"/>
</kw>
<status status="PASS" starttime="20210604 03:28:08.135" endtime="20210604 03:28:08.136"/>
</kw>
<status status="PASS" starttime="20210604 03:28:08.130" endtime="20210604 03:28:08.136"/>
</kw>
<doc>Проверка поиска по таблице, предварительно измененной SQL запросом</doc>
<status status="PASS" starttime="20210604 03:28:08.088" endtime="20210604 03:28:08.136"/>
</test>
<status status="PASS" starttime="20210604 03:28:07.493" endtime="20210604 03:28:08.137"/>
</suite>
<suite id="s1-s2" name="Homework3" source="G:\Nexign\RobotFramework1\Homework3.robot">
<test id="s1-s2-t1" name="Multiple base search SQL test">
<kw name="Test Setup" library="resource" type="SETUP">
<kw name="Create Session" library="Req">
<arg>alias</arg>
<arg>http://localhost:3000</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210604 03:28:08.152" level="INFO">Creating Session using : alias=alias, url=http://localhost:3000, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210604 03:28:08.151" endtime="20210604 03:28:08.152"/>
</kw>
<kw name="Connect To Postgresql" library="DB">
<arg>hadb</arg>
<arg>authenticator</arg>
<arg>mysecretpassword</arg>
<arg>localhost</arg>
<arg>8432</arg>
<doc>Connection to Postgres DB.</doc>
<status status="PASS" starttime="20210604 03:28:08.152" endtime="20210604 03:28:08.176"/>
</kw>
<status status="PASS" starttime="20210604 03:28:08.150" endtime="20210604 03:28:08.176"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${params}</var>
<arg>amount=5</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210604 03:28:08.177" level="INFO">${params} = {'amount': '5'}</msg>
<status status="PASS" starttime="20210604 03:28:08.177" endtime="20210604 03:28:08.177"/>
</kw>
<kw name="Get Multiple Selection Result" library="PY_HW">
<var>${python_result}</var>
<arg>${params}[amount]</arg>
<doc>Функция возвращается данные обо всех товарах из таблицы products,
запас которых на складе меньше заданного параметра
:param amount: Значение, с которым сравнивает запас товара на складе
:return: Все подходящие товары, представленные в виде {ID товара, название товара}</doc>
<msg timestamp="20210604 03:28:08.179" level="INFO" html="true">&lt;details&gt;&lt;summary&gt;Running PL/PGSQL statement&lt;/summary&gt;&lt;p&gt;SELECT DISTINCT prod.prod_id, title 
                  FROM bootcamp.inventory AS inv 
                  INNER JOIN bootcamp.products AS prod 
                  ON inv.prod_id=prod.prod_id 
                  WHERE &amp;quot;quan_in_stock&amp;quot; &amp;lt; %(amount)s&lt;/p&gt;&lt;/details&gt;</msg>
<msg timestamp="20210604 03:28:08.187" level="INFO" html="true">&lt;details&gt;&lt;summary&gt;SQL Query Result&lt;/summary&gt;&lt;p&gt;[{&amp;#x27;prod_id&amp;#x27;: 189, &amp;#x27;title&amp;#x27;: &amp;#x27;ACADEMY CREATURES&amp;#x27;}, {&amp;#x27;prod_id&amp;#x27;: 223, &amp;#x27;title&amp;#x27;: &amp;#x27;ACADEMY DESIRE&amp;#x27;}, {&amp;#x27;prod_id&amp;#x27;: 419, &amp;#x27;title&amp;#x27;: &amp;#x27;ACADEMY HOCUS&amp;#x27;}, {&amp;#x27;prod_id&amp;#x27;: 452, &amp;#x27;title&amp;#x27;: &amp;#x27;ACADEMY ILLUSION&amp;#x27;}, {&amp;#x27;prod_id&amp;#x27;: 543, &amp;#x27;title&amp;#x27;: &amp;#x27;ACADEMY MADIGAN&amp;#x27;}, {&amp;#x27;prod_id&amp;#x27;: 756, &amp;#x27;title&amp;#x27;: &amp;#x27;ACADEMY SADDLE&amp;#x27;}, {&amp;#x27;prod_id&amp;#x27;: 783, &amp;#x27;title&amp;#x27;: &amp;#x27;ACADEMY SHANE&amp;#x27;}, {&amp;#x27;prod_id&amp;#x27;: 852, &amp;#x27;title&amp;#x27;: &amp;#x27;ACADEMY STRANGELOVE&amp;#x27;}, {&amp;#x27;prod_id&amp;#x27;: 936, &amp;#x27;title&amp;#x27;: &amp;#x27;ACADEMY VANISHING&amp;#x27;}, {&amp;#x27;prod_id&amp;#x27;: 952, &amp;#x27;title&amp;#x27;: &amp;#x27;ACADEMY WAGON&amp;#x27;}]&lt;/p&gt;&lt;/details&gt;</msg>
<msg timestamp="20210604 03:28:08.189" level="INFO">${python_result} = [{'prod_id': 189, 'title': 'ACADEMY CREATURES'}, {'prod_id': 223, 'title': 'ACADEMY DESIRE'}, {'prod_id': 419, 'title': 'ACADEMY HOCUS'}, {'prod_id': 452, 'title': 'ACADEMY ILLUSION'}, {'prod_id': 543...</msg>
<status status="PASS" starttime="20210604 03:28:08.178" endtime="20210604 03:28:08.189"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${python_count}</var>
<arg>${python_result}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20210604 03:28:08.190" level="INFO">Length is 109</msg>
<msg timestamp="20210604 03:28:08.190" level="INFO">${python_count} = 109</msg>
<status status="PASS" starttime="20210604 03:28:08.189" endtime="20210604 03:28:08.190"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${python_count}</arg>
<arg>${select_rows_count_SQL}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" starttime="20210604 03:28:08.190" endtime="20210604 03:28:08.191"/>
</kw>
<kw name="Test Teardown" library="resource" type="TEARDOWN">
<kw name="Delete All Sessions" library="Req">
<doc>Removes all the session objects</doc>
<msg timestamp="20210604 03:28:08.191" level="INFO">Deleting All Sessions</msg>
<status status="PASS" starttime="20210604 03:28:08.191" endtime="20210604 03:28:08.191"/>
</kw>
<kw name="Disconnect From Postgresql" library="DB">
<doc>Close active PostgreSQL connection.
You will have to manually open or switch to a new connection.
Due to how ConnectionCache works, connection's index and alias are not removed from cache, so you are able to switch to
closed connection, if it was closed with Disconnect from Postgresql. It will still remain closed though.</doc>
<status status="PASS" starttime="20210604 03:28:08.191" endtime="20210604 03:28:08.192"/>
</kw>
<status status="PASS" starttime="20210604 03:28:08.191" endtime="20210604 03:28:08.192"/>
</kw>
<doc>Проверка поиска в двух таблицах при помощи SQL запроса, завернутого в питоновскую функцию</doc>
<timeout value="10 seconds"/>
<status status="PASS" starttime="20210604 03:28:08.149" endtime="20210604 03:28:08.192"/>
</test>
<test id="s1-s2-t2" name="Table change SQL request">
<kw name="Test Setup" library="resource" type="SETUP">
<kw name="Create Session" library="Req">
<arg>alias</arg>
<arg>http://localhost:3000</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210604 03:28:08.195" level="INFO">Creating Session using : alias=alias, url=http://localhost:3000, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210604 03:28:08.193" endtime="20210604 03:28:08.195"/>
</kw>
<kw name="Connect To Postgresql" library="DB">
<arg>hadb</arg>
<arg>authenticator</arg>
<arg>mysecretpassword</arg>
<arg>localhost</arg>
<arg>8432</arg>
<doc>Connection to Postgres DB.</doc>
<status status="PASS" starttime="20210604 03:28:08.195" endtime="20210604 03:28:08.230"/>
</kw>
<status status="PASS" starttime="20210604 03:28:08.193" endtime="20210604 03:28:08.231"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${table_name}</var>
<arg>bootcamp.categories</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210604 03:28:08.231" level="INFO">${table_name} = bootcamp.categories</msg>
<status status="PASS" starttime="20210604 03:28:08.231" endtime="20210604 03:28:08.231"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${insertion_params}</var>
<arg>category=17</arg>
<arg>name=Adult only</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210604 03:28:08.232" level="INFO">${insertion_params} = {'category': '17', 'name': 'Adult only'}</msg>
<status status="PASS" starttime="20210604 03:28:08.232" endtime="20210604 03:28:08.232"/>
</kw>
<kw name="Get Table Size" library="PY_HW">
<var>${pre_size}</var>
<doc>Функция вычисляет число категорий.
:return: Число строк в таблице categories.</doc>
<msg timestamp="20210604 03:28:08.232" level="INFO" html="true">&lt;details&gt;&lt;summary&gt;Running PL/PGSQL statement&lt;/summary&gt;&lt;p&gt;SELECT COUNT(*) FROM bootcamp.categories&lt;/p&gt;&lt;/details&gt;</msg>
<msg timestamp="20210604 03:28:08.236" level="INFO" html="true">&lt;details&gt;&lt;summary&gt;SQL Query Result&lt;/summary&gt;&lt;p&gt;[{&amp;#x27;count&amp;#x27;: 16}]&lt;/p&gt;&lt;/details&gt;</msg>
<msg timestamp="20210604 03:28:08.237" level="INFO">${pre_size} = 16</msg>
<status status="PASS" starttime="20210604 03:28:08.232" endtime="20210604 03:28:08.237"/>
</kw>
<kw name="Insert Row Into Table" library="PY_HW">
<var>${python_result}</var>
<arg>${insertion_params}[category]</arg>
<arg>${insertion_params}[name]</arg>
<doc>Функция добавляет в таблицу categories новый ряд со значениями, переданными в параметрах
:param category: Номер добавляемой категории. В таблице явлеяется ключом, поэтому возможно ошибка при добавлении
:param category_name: Название новой категории. Ключом не является.
:return: Список номеров всех категорий.</doc>
<msg timestamp="20210604 03:28:08.238" level="INFO" html="true">&lt;details&gt;&lt;summary&gt;Running PL/PGSQL statement&lt;/summary&gt;&lt;p&gt;INSERT INTO bootcamp.categories (category, categoryname) 
                 VALUES (%(category)s, %(name)s);
                 SELECT category FROM bootcamp.categories&lt;/p&gt;&lt;/details&gt;</msg>
<msg timestamp="20210604 03:28:08.241" level="INFO" html="true">&lt;details&gt;&lt;summary&gt;SQL Query Result&lt;/summary&gt;&lt;p&gt;[{&amp;#x27;category&amp;#x27;: 1}, {&amp;#x27;category&amp;#x27;: 2}, {&amp;#x27;category&amp;#x27;: 3}, {&amp;#x27;category&amp;#x27;: 4}, {&amp;#x27;category&amp;#x27;: 5}, {&amp;#x27;category&amp;#x27;: 6}, {&amp;#x27;category&amp;#x27;: 7}, {&amp;#x27;category&amp;#x27;: 8}, {&amp;#x27;category&amp;#x27;: 9}, {&amp;#x27;category&amp;#x27;: 10}]&lt;/p&gt;&lt;/details&gt;</msg>
<msg timestamp="20210604 03:28:08.242" level="INFO">${python_result} = [{'category': 1}, {'category': 2}, {'category': 3}, {'category': 4}, {'category': 5}, {'category': 6}, {'category': 7}, {'category': 8}, {'category': 9}, {'category': 10}, {'category': 11}, {'category...</msg>
<status status="PASS" starttime="20210604 03:28:08.238" endtime="20210604 03:28:08.242"/>
</kw>
<kw name="Get Table Size" library="PY_HW">
<var>${post_size}</var>
<doc>Функция вычисляет число категорий.
:return: Число строк в таблице categories.</doc>
<msg timestamp="20210604 03:28:08.243" level="INFO" html="true">&lt;details&gt;&lt;summary&gt;Running PL/PGSQL statement&lt;/summary&gt;&lt;p&gt;SELECT COUNT(*) FROM bootcamp.categories&lt;/p&gt;&lt;/details&gt;</msg>
<msg timestamp="20210604 03:28:08.245" level="INFO" html="true">&lt;details&gt;&lt;summary&gt;SQL Query Result&lt;/summary&gt;&lt;p&gt;[{&amp;#x27;count&amp;#x27;: 16}]&lt;/p&gt;&lt;/details&gt;</msg>
<msg timestamp="20210604 03:28:08.246" level="INFO">${post_size} = 16</msg>
<status status="PASS" starttime="20210604 03:28:08.242" endtime="20210604 03:28:08.246"/>
</kw>
<kw name="Compare Sizes Before And After Changes" library="PY_HW">
<arg>${pre_size}</arg>
<arg>${post_size}</arg>
<arg>${1}</arg>
<doc>Функция выполняет сравнение размера таблицы до и после изменений
:param pre_size: Размер таблицы до внесения новых строк.
:param post_size: Размер таблицы после внесения новых строк.
:param insertions: Число успешных операций добавления строки между замерами размера.
:return: Истина, если значения соответствуют ожиданиям. Ложь, если значения не соответствуют ожиданиям.</doc>
<status status="PASS" starttime="20210604 03:28:08.247" endtime="20210604 03:28:08.248"/>
</kw>
<kw name="Test Teardown Insertions Cleaning" type="TEARDOWN">
<kw name="Create Dictionary" library="BuiltIn">
<var>${removing_params}</var>
<arg>category=17</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210604 03:28:08.249" level="INFO">${removing_params} = {'category': '17'}</msg>
<status status="PASS" starttime="20210604 03:28:08.248" endtime="20210604 03:28:08.249"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${removing_SQL}</var>
<arg>DELETE FROM bootcamp.categories where category=17 returning ''</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210604 03:28:08.249" level="INFO">${removing_SQL} = DELETE FROM bootcamp.categories where category=17 returning ''</msg>
<status status="PASS" starttime="20210604 03:28:08.249" endtime="20210604 03:28:08.249"/>
</kw>
<kw name="Execute Sql String" library="DB">
<var>@{removing_result}</var>
<arg>${removing_SQL}</arg>
<arg>&amp;{removing_params}</arg>
<doc>Execute PL/PGSQL string.
For parametrized SQL queries please consider psycopg2 guide on the subject:
http://initd.org/psycopg/docs/usage.html#passing-parameters-to-sql-queries</doc>
<msg timestamp="20210604 03:28:08.249" level="INFO" html="true">&lt;details&gt;&lt;summary&gt;Running PL/PGSQL statement&lt;/summary&gt;&lt;p&gt;DELETE FROM bootcamp.categories where category=17 returning &amp;#x27;&amp;#x27;&lt;/p&gt;&lt;/details&gt;</msg>
<msg timestamp="20210604 03:28:08.252" level="INFO" html="true">&lt;details&gt;&lt;summary&gt;SQL Query Result&lt;/summary&gt;&lt;p&gt;[]&lt;/p&gt;&lt;/details&gt;</msg>
<msg timestamp="20210604 03:28:08.253" level="INFO">@{removing_result} = [ ]</msg>
<status status="PASS" starttime="20210604 03:28:08.249" endtime="20210604 03:28:08.253"/>
</kw>
<kw name="Test Teardown" library="resource">
<kw name="Delete All Sessions" library="Req">
<doc>Removes all the session objects</doc>
<msg timestamp="20210604 03:28:08.253" level="INFO">Deleting All Sessions</msg>
<status status="PASS" starttime="20210604 03:28:08.253" endtime="20210604 03:28:08.254"/>
</kw>
<kw name="Disconnect From Postgresql" library="DB">
<doc>Close active PostgreSQL connection.
You will have to manually open or switch to a new connection.
Due to how ConnectionCache works, connection's index and alias are not removed from cache, so you are able to switch to
closed connection, if it was closed with Disconnect from Postgresql. It will still remain closed though.</doc>
<status status="PASS" starttime="20210604 03:28:08.254" endtime="20210604 03:28:08.254"/>
</kw>
<status status="PASS" starttime="20210604 03:28:08.253" endtime="20210604 03:28:08.254"/>
</kw>
<status status="PASS" starttime="20210604 03:28:08.248" endtime="20210604 03:28:08.254"/>
</kw>
<doc>Проверка поиска по таблице, предварительно измененной SQL запросом, завернутым в питоновскую функцию</doc>
<timeout value="10 seconds"/>
<status status="PASS" starttime="20210604 03:28:08.192" endtime="20210604 03:28:08.254"/>
</test>
<doc>Тест-кейсы, реализующие третье домашнее задание в рамках лекций по robot framework на nexign bootcamp 2021</doc>
<meta name="Автор">Михаил Колесников</meta>
<meta name="Постановка задачи">Реализовать задание по тестам на обращение к нескольким таблицам и добавление значений, используя метаданные, таймауты, кастомные кейворды и функции из питона.</meta>
<status status="PASS" starttime="20210604 03:28:08.138" endtime="20210604 03:28:08.255"/>
</suite>
<suite id="s1-s3" name="Task one" source="G:\Nexign\RobotFramework1\Task_one.robot">
<test id="s1-s3-t1" name="Min and max test">
>>>>>>> Stashed changes
<kw name="Get minmax from list">
<var>@{res}</var>
<arg>@{TestIntList}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${min}</var>
<arg>${list}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<<<<<<< Updated upstream
<msg timestamp="20210602 19:30:36.274" level="INFO">${min} = 2</msg>
<status status="PASS" starttime="20210602 19:30:36.274" endtime="20210602 19:30:36.274"/>
=======
<msg timestamp="20210604 03:28:08.262" level="INFO">${min} = 2</msg>
<status status="PASS" starttime="20210604 03:28:08.262" endtime="20210604 03:28:08.262"/>
>>>>>>> Stashed changes
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${max}</var>
<arg>${list}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<<<<<<< Updated upstream
<msg timestamp="20210602 19:30:36.275" level="INFO">${max} = 2</msg>
<status status="PASS" starttime="20210602 19:30:36.275" endtime="20210602 19:30:36.275"/>
=======
<msg timestamp="20210604 03:28:08.262" level="INFO">${max} = 2</msg>
<status status="PASS" starttime="20210604 03:28:08.262" endtime="20210604 03:28:08.262"/>
>>>>>>> Stashed changes
</kw>
<for flavor="IN">
<var>${val}</var>
<value>@{list}</value>
<iter>
<var name="${val}">2</var>
<if>
<branch type="IF" condition="${val} &lt; ${min}">
<kw name="Set Variable" library="BuiltIn">
<var>${min}</var>
<arg>${val}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<<<<<<< Updated upstream
<status status="NOT RUN" starttime="20210602 19:30:36.275" endtime="20210602 19:30:36.275"/>
</kw>
<status status="NOT RUN" starttime="20210602 19:30:36.275" endtime="20210602 19:30:36.275"/>
</branch>
<status status="PASS" starttime="20210602 19:30:36.275" endtime="20210602 19:30:36.276"/>
=======
<status status="NOT RUN" starttime="20210604 03:28:08.263" endtime="20210604 03:28:08.263"/>
</kw>
<status status="NOT RUN" starttime="20210604 03:28:08.263" endtime="20210604 03:28:08.263"/>
</branch>
<status status="PASS" starttime="20210604 03:28:08.263" endtime="20210604 03:28:08.263"/>
>>>>>>> Stashed changes
</if>
<if>
<branch type="IF" condition="${val} &gt; ${max}">
<kw name="Set Variable" library="BuiltIn">
<var>${max}</var>
<arg>${val}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<<<<<<< Updated upstream
<status status="NOT RUN" starttime="20210602 19:30:36.276" endtime="20210602 19:30:36.276"/>
</kw>
<status status="NOT RUN" starttime="20210602 19:30:36.276" endtime="20210602 19:30:36.276"/>
</branch>
<status status="PASS" starttime="20210602 19:30:36.276" endtime="20210602 19:30:36.276"/>
</if>
<status status="PASS" starttime="20210602 19:30:36.275" endtime="20210602 19:30:36.276"/>
=======
<status status="NOT RUN" starttime="20210604 03:28:08.263" endtime="20210604 03:28:08.263"/>
</kw>
<status status="NOT RUN" starttime="20210604 03:28:08.263" endtime="20210604 03:28:08.263"/>
</branch>
<status status="PASS" starttime="20210604 03:28:08.263" endtime="20210604 03:28:08.264"/>
</if>
<status status="PASS" starttime="20210604 03:28:08.263" endtime="20210604 03:28:08.264"/>
>>>>>>> Stashed changes
</iter>
<iter>
<var name="${val}">4</var>
<if>
<branch type="IF" condition="${val} &lt; ${min}">
<kw name="Set Variable" library="BuiltIn">
<var>${min}</var>
<arg>${val}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<<<<<<< Updated upstream
<status status="NOT RUN" starttime="20210602 19:30:36.277" endtime="20210602 19:30:36.277"/>
</kw>
<status status="NOT RUN" starttime="20210602 19:30:36.276" endtime="20210602 19:30:36.277"/>
</branch>
<status status="PASS" starttime="20210602 19:30:36.276" endtime="20210602 19:30:36.277"/>
=======
<status status="NOT RUN" starttime="20210604 03:28:08.264" endtime="20210604 03:28:08.264"/>
</kw>
<status status="NOT RUN" starttime="20210604 03:28:08.264" endtime="20210604 03:28:08.264"/>
</branch>
<status status="PASS" starttime="20210604 03:28:08.264" endtime="20210604 03:28:08.264"/>
>>>>>>> Stashed changes
</if>
<if>
<branch type="IF" condition="${val} &gt; ${max}">
<kw name="Set Variable" library="BuiltIn">
<var>${max}</var>
<arg>${val}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<<<<<<< Updated upstream
<msg timestamp="20210602 19:30:36.277" level="INFO">${max} = 4</msg>
<status status="PASS" starttime="20210602 19:30:36.277" endtime="20210602 19:30:36.277"/>
</kw>
<status status="PASS" starttime="20210602 19:30:36.277" endtime="20210602 19:30:36.277"/>
</branch>
<status status="PASS" starttime="20210602 19:30:36.277" endtime="20210602 19:30:36.278"/>
</if>
<status status="PASS" starttime="20210602 19:30:36.276" endtime="20210602 19:30:36.278"/>
=======
<msg timestamp="20210604 03:28:08.264" level="INFO">${max} = 4</msg>
<status status="PASS" starttime="20210604 03:28:08.264" endtime="20210604 03:28:08.264"/>
</kw>
<status status="PASS" starttime="20210604 03:28:08.264" endtime="20210604 03:28:08.265"/>
</branch>
<status status="PASS" starttime="20210604 03:28:08.264" endtime="20210604 03:28:08.265"/>
</if>
<status status="PASS" starttime="20210604 03:28:08.264" endtime="20210604 03:28:08.265"/>
>>>>>>> Stashed changes
</iter>
<iter>
<var name="${val}">1</var>
<if>
<branch type="IF" condition="${val} &lt; ${min}">
<kw name="Set Variable" library="BuiltIn">
<var>${min}</var>
<arg>${val}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<<<<<<< Updated upstream
<msg timestamp="20210602 19:30:36.278" level="INFO">${min} = 1</msg>
<status status="PASS" starttime="20210602 19:30:36.278" endtime="20210602 19:30:36.278"/>
</kw>
<status status="PASS" starttime="20210602 19:30:36.278" endtime="20210602 19:30:36.278"/>
</branch>
<status status="PASS" starttime="20210602 19:30:36.278" endtime="20210602 19:30:36.278"/>
=======
<msg timestamp="20210604 03:28:08.265" level="INFO">${min} = 1</msg>
<status status="PASS" starttime="20210604 03:28:08.265" endtime="20210604 03:28:08.265"/>
</kw>
<status status="PASS" starttime="20210604 03:28:08.265" endtime="20210604 03:28:08.265"/>
</branch>
<status status="PASS" starttime="20210604 03:28:08.265" endtime="20210604 03:28:08.265"/>
>>>>>>> Stashed changes
</if>
<if>
<branch type="IF" condition="${val} &gt; ${max}">
<kw name="Set Variable" library="BuiltIn">
<var>${max}</var>
<arg>${val}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<<<<<<< Updated upstream
<status status="NOT RUN" starttime="20210602 19:30:36.279" endtime="20210602 19:30:36.279"/>
</kw>
<status status="NOT RUN" starttime="20210602 19:30:36.279" endtime="20210602 19:30:36.279"/>
</branch>
<status status="PASS" starttime="20210602 19:30:36.278" endtime="20210602 19:30:36.279"/>
</if>
<status status="PASS" starttime="20210602 19:30:36.278" endtime="20210602 19:30:36.279"/>
=======
<status status="NOT RUN" starttime="20210604 03:28:08.265" endtime="20210604 03:28:08.266"/>
</kw>
<status status="NOT RUN" starttime="20210604 03:28:08.265" endtime="20210604 03:28:08.266"/>
</branch>
<status status="PASS" starttime="20210604 03:28:08.265" endtime="20210604 03:28:08.266"/>
</if>
<status status="PASS" starttime="20210604 03:28:08.265" endtime="20210604 03:28:08.266"/>
>>>>>>> Stashed changes
</iter>
<iter>
<var name="${val}">5</var>
<if>
<branch type="IF" condition="${val} &lt; ${min}">
<kw name="Set Variable" library="BuiltIn">
<var>${min}</var>
<arg>${val}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<<<<<<< Updated upstream
<status status="NOT RUN" starttime="20210602 19:30:36.280" endtime="20210602 19:30:36.280"/>
</kw>
<status status="NOT RUN" starttime="20210602 19:30:36.280" endtime="20210602 19:30:36.280"/>
</branch>
<status status="PASS" starttime="20210602 19:30:36.279" endtime="20210602 19:30:36.280"/>
=======
<status status="NOT RUN" starttime="20210604 03:28:08.266" endtime="20210604 03:28:08.266"/>
</kw>
<status status="NOT RUN" starttime="20210604 03:28:08.266" endtime="20210604 03:28:08.266"/>
</branch>
<status status="PASS" starttime="20210604 03:28:08.266" endtime="20210604 03:28:08.266"/>
>>>>>>> Stashed changes
</if>
<if>
<branch type="IF" condition="${val} &gt; ${max}">
<kw name="Set Variable" library="BuiltIn">
<var>${max}</var>
<arg>${val}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<<<<<<< Updated upstream
<msg timestamp="20210602 19:30:36.281" level="INFO">${max} = 5</msg>
<status status="PASS" starttime="20210602 19:30:36.281" endtime="20210602 19:30:36.281"/>
</kw>
<status status="PASS" starttime="20210602 19:30:36.281" endtime="20210602 19:30:36.282"/>
</branch>
<status status="PASS" starttime="20210602 19:30:36.281" endtime="20210602 19:30:36.282"/>
</if>
<status status="PASS" starttime="20210602 19:30:36.279" endtime="20210602 19:30:36.282"/>
=======
<msg timestamp="20210604 03:28:08.267" level="INFO">${max} = 5</msg>
<status status="PASS" starttime="20210604 03:28:08.267" endtime="20210604 03:28:08.267"/>
</kw>
<status status="PASS" starttime="20210604 03:28:08.267" endtime="20210604 03:28:08.267"/>
</branch>
<status status="PASS" starttime="20210604 03:28:08.266" endtime="20210604 03:28:08.267"/>
</if>
<status status="PASS" starttime="20210604 03:28:08.266" endtime="20210604 03:28:08.267"/>
>>>>>>> Stashed changes
</iter>
<iter>
<var name="${val}">4</var>
<if>
<branch type="IF" condition="${val} &lt; ${min}">
<kw name="Set Variable" library="BuiltIn">
<var>${min}</var>
<arg>${val}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<<<<<<< Updated upstream
<status status="NOT RUN" starttime="20210602 19:30:36.283" endtime="20210602 19:30:36.283"/>
</kw>
<status status="NOT RUN" starttime="20210602 19:30:36.283" endtime="20210602 19:30:36.283"/>
</branch>
<status status="PASS" starttime="20210602 19:30:36.282" endtime="20210602 19:30:36.283"/>
=======
<status status="NOT RUN" starttime="20210604 03:28:08.267" endtime="20210604 03:28:08.267"/>
</kw>
<status status="NOT RUN" starttime="20210604 03:28:08.267" endtime="20210604 03:28:08.268"/>
</branch>
<status status="PASS" starttime="20210604 03:28:08.267" endtime="20210604 03:28:08.268"/>
>>>>>>> Stashed changes
</if>
<if>
<branch type="IF" condition="${val} &gt; ${max}">
<kw name="Set Variable" library="BuiltIn">
<var>${max}</var>
<arg>${val}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<<<<<<< Updated upstream
<status status="NOT RUN" starttime="20210602 19:30:36.283" endtime="20210602 19:30:36.283"/>
</kw>
<status status="NOT RUN" starttime="20210602 19:30:36.283" endtime="20210602 19:30:36.283"/>
</branch>
<status status="PASS" starttime="20210602 19:30:36.283" endtime="20210602 19:30:36.284"/>
</if>
<status status="PASS" starttime="20210602 19:30:36.282" endtime="20210602 19:30:36.284"/>
</iter>
<status status="PASS" starttime="20210602 19:30:36.275" endtime="20210602 19:30:36.284"/>
=======
<status status="NOT RUN" starttime="20210604 03:28:08.268" endtime="20210604 03:28:08.268"/>
</kw>
<status status="NOT RUN" starttime="20210604 03:28:08.268" endtime="20210604 03:28:08.268"/>
</branch>
<status status="PASS" starttime="20210604 03:28:08.268" endtime="20210604 03:28:08.268"/>
</if>
<status status="PASS" starttime="20210604 03:28:08.267" endtime="20210604 03:28:08.268"/>
</iter>
<status status="PASS" starttime="20210604 03:28:08.263" endtime="20210604 03:28:08.268"/>
>>>>>>> Stashed changes
</for>
<kw name="Create List" library="BuiltIn">
<var>@{res}</var>
<arg>${min}</arg>
<arg>${max}</arg>
<doc>Returns a list containing given items.</doc>
<<<<<<< Updated upstream
<msg timestamp="20210602 19:30:36.284" level="INFO">@{res} = [ 1 | 5 ]</msg>
<status status="PASS" starttime="20210602 19:30:36.284" endtime="20210602 19:30:36.284"/>
</kw>
<msg timestamp="20210602 19:30:36.284" level="INFO">@{res} = [ 1 | 5 ]</msg>
<status status="PASS" starttime="20210602 19:30:36.274" endtime="20210602 19:30:36.284"/>
=======
<msg timestamp="20210604 03:28:08.268" level="INFO">@{res} = [ 1 | 5 ]</msg>
<status status="PASS" starttime="20210604 03:28:08.268" endtime="20210604 03:28:08.268"/>
</kw>
<msg timestamp="20210604 03:28:08.269" level="INFO">@{res} = [ 1 | 5 ]</msg>
<status status="PASS" starttime="20210604 03:28:08.261" endtime="20210604 03:28:08.269"/>
>>>>>>> Stashed changes
</kw>
<kw name="Log" library="BuiltIn">
<arg>Получено минимальное значение ${res}[0] и максимальное значение ${res}[1]</arg>
<doc>Logs the given message with the given level.</doc>
<<<<<<< Updated upstream
<msg timestamp="20210602 19:30:36.285" level="INFO">Получено минимальное значение 1 и максимальное значение 5</msg>
<status status="PASS" starttime="20210602 19:30:36.284" endtime="20210602 19:30:36.285"/>
</kw>
<status status="PASS" starttime="20210602 19:30:36.273" endtime="20210602 19:30:36.285"/>
=======
<msg timestamp="20210604 03:28:08.269" level="INFO">Получено минимальное значение 1 и максимальное значение 5</msg>
<status status="PASS" starttime="20210604 03:28:08.269" endtime="20210604 03:28:08.269"/>
</kw>
<status status="PASS" starttime="20210604 03:28:08.260" endtime="20210604 03:28:08.269"/>
>>>>>>> Stashed changes
</test>
<test id="s1-s1-t2" name="Uniqie sublist test with get function">
<kw name="Get unique vals from list">
<var>@{sublist}</var>
<arg>@{TestStringList}</arg>
<kw name="Import Library" library="BuiltIn">
<arg>Collections</arg>
<doc>Imports a library with the given name and optional arguments.</doc>
<<<<<<< Updated upstream
<status status="PASS" starttime="20210602 19:30:36.287" endtime="20210602 19:30:36.295"/>
=======
<status status="PASS" starttime="20210604 03:28:08.270" endtime="20210604 03:28:08.277"/>
>>>>>>> Stashed changes
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{res}</var>
<arg>${list}[0]</arg>
<doc>Returns a list containing given items.</doc>
<<<<<<< Updated upstream
<msg timestamp="20210602 19:30:36.296" level="INFO">@{res} = [ line1 ]</msg>
<status status="PASS" starttime="20210602 19:30:36.295" endtime="20210602 19:30:36.296"/>
=======
<msg timestamp="20210604 03:28:08.278" level="INFO">@{res} = [ line1 ]</msg>
<status status="PASS" starttime="20210604 03:28:08.278" endtime="20210604 03:28:08.278"/>
>>>>>>> Stashed changes
</kw>
<for flavor="IN">
<var>${val}</var>
<value>@{list}</value>
<iter>
<var name="${val}">line1</var>
<if>
<branch type="IF" condition="'${val}' not in @{res}">
<kw name="Append To List" library="Collections">
<arg>${res}</arg>
<arg>${val}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<<<<<<< Updated upstream
<status status="NOT RUN" starttime="20210602 19:30:36.296" endtime="20210602 19:30:36.297"/>
</kw>
<status status="NOT RUN" starttime="20210602 19:30:36.296" endtime="20210602 19:30:36.297"/>
</branch>
<status status="PASS" starttime="20210602 19:30:36.296" endtime="20210602 19:30:36.297"/>
</if>
<status status="PASS" starttime="20210602 19:30:36.296" endtime="20210602 19:30:36.297"/>
=======
<status status="NOT RUN" starttime="20210604 03:28:08.279" endtime="20210604 03:28:08.279"/>
</kw>
<status status="NOT RUN" starttime="20210604 03:28:08.279" endtime="20210604 03:28:08.279"/>
</branch>
<status status="PASS" starttime="20210604 03:28:08.279" endtime="20210604 03:28:08.279"/>
</if>
<status status="PASS" starttime="20210604 03:28:08.279" endtime="20210604 03:28:08.279"/>
>>>>>>> Stashed changes
</iter>
<iter>
<var name="${val}">line2</var>
<if>
<branch type="IF" condition="'${val}' not in @{res}">
<kw name="Append To List" library="Collections">
<arg>${res}</arg>
<arg>${val}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<<<<<<< Updated upstream
<status status="PASS" starttime="20210602 19:30:36.298" endtime="20210602 19:30:36.298"/>
</kw>
<status status="PASS" starttime="20210602 19:30:36.298" endtime="20210602 19:30:36.298"/>
</branch>
<status status="PASS" starttime="20210602 19:30:36.298" endtime="20210602 19:30:36.298"/>
</if>
<status status="PASS" starttime="20210602 19:30:36.298" endtime="20210602 19:30:36.298"/>
=======
<status status="PASS" starttime="20210604 03:28:08.279" endtime="20210604 03:28:08.280"/>
</kw>
<status status="PASS" starttime="20210604 03:28:08.279" endtime="20210604 03:28:08.280"/>
</branch>
<status status="PASS" starttime="20210604 03:28:08.279" endtime="20210604 03:28:08.280"/>
</if>
<status status="PASS" starttime="20210604 03:28:08.279" endtime="20210604 03:28:08.280"/>
>>>>>>> Stashed changes
</iter>
<iter>
<var name="${val}">line1</var>
<if>
<branch type="IF" condition="'${val}' not in @{res}">
<kw name="Append To List" library="Collections">
<arg>${res}</arg>
<arg>${val}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<<<<<<< Updated upstream
<status status="NOT RUN" starttime="20210602 19:30:36.299" endtime="20210602 19:30:36.299"/>
</kw>
<status status="NOT RUN" starttime="20210602 19:30:36.299" endtime="20210602 19:30:36.299"/>
</branch>
<status status="PASS" starttime="20210602 19:30:36.299" endtime="20210602 19:30:36.299"/>
</if>
<status status="PASS" starttime="20210602 19:30:36.299" endtime="20210602 19:30:36.299"/>
=======
<status status="NOT RUN" starttime="20210604 03:28:08.280" endtime="20210604 03:28:08.280"/>
</kw>
<status status="NOT RUN" starttime="20210604 03:28:08.280" endtime="20210604 03:28:08.280"/>
</branch>
<status status="PASS" starttime="20210604 03:28:08.280" endtime="20210604 03:28:08.280"/>
</if>
<status status="PASS" starttime="20210604 03:28:08.280" endtime="20210604 03:28:08.280"/>
>>>>>>> Stashed changes
</iter>
<iter>
<var name="${val}">line4</var>
<if>
<branch type="IF" condition="'${val}' not in @{res}">
<kw name="Append To List" library="Collections">
<arg>${res}</arg>
<arg>${val}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<<<<<<< Updated upstream
<status status="PASS" starttime="20210602 19:30:36.299" endtime="20210602 19:30:36.300"/>
</kw>
<status status="PASS" starttime="20210602 19:30:36.299" endtime="20210602 19:30:36.300"/>
</branch>
<status status="PASS" starttime="20210602 19:30:36.299" endtime="20210602 19:30:36.300"/>
</if>
<status status="PASS" starttime="20210602 19:30:36.299" endtime="20210602 19:30:36.300"/>
</iter>
<status status="PASS" starttime="20210602 19:30:36.296" endtime="20210602 19:30:36.300"/>
</for>
<msg timestamp="20210602 19:30:36.300" level="INFO">@{sublist} = [ line1 | line2 | line4 ]</msg>
<status status="PASS" starttime="20210602 19:30:36.286" endtime="20210602 19:30:36.300"/>
=======
<status status="PASS" starttime="20210604 03:28:08.281" endtime="20210604 03:28:08.281"/>
</kw>
<status status="PASS" starttime="20210604 03:28:08.281" endtime="20210604 03:28:08.281"/>
</branch>
<status status="PASS" starttime="20210604 03:28:08.280" endtime="20210604 03:28:08.281"/>
</if>
<status status="PASS" starttime="20210604 03:28:08.280" endtime="20210604 03:28:08.281"/>
</iter>
<status status="PASS" starttime="20210604 03:28:08.278" endtime="20210604 03:28:08.281"/>
</for>
<msg timestamp="20210604 03:28:08.282" level="INFO">@{sublist} = [ line1 | line2 | line4 ]</msg>
<status status="PASS" starttime="20210604 03:28:08.270" endtime="20210604 03:28:08.282"/>
>>>>>>> Stashed changes
</kw>
<kw name="Log Many" library="BuiltIn">
<arg>Из списка выл выделен следующий подсписок, содержащий все уникальные значения исходного @{sublist}</arg>
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<<<<<<< Updated upstream
<msg timestamp="20210602 19:30:36.300" level="INFO">Из списка выл выделен следующий подсписок, содержащий все уникальные значения исходного ['line1', 'line2', 'line4']</msg>
<status status="PASS" starttime="20210602 19:30:36.300" endtime="20210602 19:30:36.300"/>
</kw>
<status status="PASS" starttime="20210602 19:30:36.285" endtime="20210602 19:30:36.300"/>
=======
<msg timestamp="20210604 03:28:08.282" level="INFO">Из списка выл выделен следующий подсписок, содержащий все уникальные значения исходного ['line1', 'line2', 'line4']</msg>
<status status="PASS" starttime="20210604 03:28:08.282" endtime="20210604 03:28:08.282"/>
</kw>
<status status="PASS" starttime="20210604 03:28:08.269" endtime="20210604 03:28:08.282"/>
>>>>>>> Stashed changes
</test>
<test id="s1-s1-t3" name="Unique sublist test with print fuction">
<kw name="Print unique vals from list">
<arg>@{TestIntList}</arg>
<kw name="Import Library" library="BuiltIn">
<arg>Collections</arg>
<doc>Imports a library with the given name and optional arguments.</doc>
<<<<<<< Updated upstream
<status status="PASS" starttime="20210602 19:30:36.301" endtime="20210602 19:30:36.303"/>
=======
<status status="PASS" starttime="20210604 03:28:08.283" endtime="20210604 03:28:08.284"/>
>>>>>>> Stashed changes
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{res}</var>
<doc>Returns a list containing given items.</doc>
<<<<<<< Updated upstream
<msg timestamp="20210602 19:30:36.303" level="INFO">@{res} = [ ]</msg>
<status status="PASS" starttime="20210602 19:30:36.303" endtime="20210602 19:30:36.303"/>
=======
<msg timestamp="20210604 03:28:08.284" level="INFO">@{res} = [ ]</msg>
<status status="PASS" starttime="20210604 03:28:08.284" endtime="20210604 03:28:08.284"/>
>>>>>>> Stashed changes
</kw>
<for flavor="IN">
<var>${val}</var>
<value>@{list}</value>
<iter>
<var name="${val}">2</var>
<if>
<branch type="IF" condition="${val} not in @{res}">
<kw name="Append To List" library="Collections">
<arg>${res}</arg>
<arg>${val}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<<<<<<< Updated upstream
<status status="PASS" starttime="20210602 19:30:36.304" endtime="20210602 19:30:36.304"/>
</kw>
<status status="PASS" starttime="20210602 19:30:36.304" endtime="20210602 19:30:36.304"/>
</branch>
<status status="PASS" starttime="20210602 19:30:36.303" endtime="20210602 19:30:36.304"/>
</if>
<status status="PASS" starttime="20210602 19:30:36.303" endtime="20210602 19:30:36.304"/>
=======
<status status="PASS" starttime="20210604 03:28:08.285" endtime="20210604 03:28:08.285"/>
</kw>
<status status="PASS" starttime="20210604 03:28:08.285" endtime="20210604 03:28:08.285"/>
</branch>
<status status="PASS" starttime="20210604 03:28:08.285" endtime="20210604 03:28:08.285"/>
</if>
<status status="PASS" starttime="20210604 03:28:08.285" endtime="20210604 03:28:08.285"/>
>>>>>>> Stashed changes
</iter>
<iter>
<var name="${val}">4</var>
<if>
<branch type="IF" condition="${val} not in @{res}">
<kw name="Append To List" library="Collections">
<arg>${res}</arg>
<arg>${val}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<<<<<<< Updated upstream
<status status="PASS" starttime="20210602 19:30:36.304" endtime="20210602 19:30:36.305"/>
</kw>
<status status="PASS" starttime="20210602 19:30:36.304" endtime="20210602 19:30:36.305"/>
</branch>
<status status="PASS" starttime="20210602 19:30:36.304" endtime="20210602 19:30:36.305"/>
</if>
<status status="PASS" starttime="20210602 19:30:36.304" endtime="20210602 19:30:36.305"/>
=======
<status status="PASS" starttime="20210604 03:28:08.286" endtime="20210604 03:28:08.286"/>
</kw>
<status status="PASS" starttime="20210604 03:28:08.285" endtime="20210604 03:28:08.286"/>
</branch>
<status status="PASS" starttime="20210604 03:28:08.285" endtime="20210604 03:28:08.286"/>
</if>
<status status="PASS" starttime="20210604 03:28:08.285" endtime="20210604 03:28:08.286"/>
>>>>>>> Stashed changes
</iter>
<iter>
<var name="${val}">1</var>
<if>
<branch type="IF" condition="${val} not in @{res}">
<kw name="Append To List" library="Collections">
<arg>${res}</arg>
<arg>${val}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<<<<<<< Updated upstream
<status status="PASS" starttime="20210602 19:30:36.305" endtime="20210602 19:30:36.305"/>
</kw>
<status status="PASS" starttime="20210602 19:30:36.305" endtime="20210602 19:30:36.305"/>
</branch>
<status status="PASS" starttime="20210602 19:30:36.305" endtime="20210602 19:30:36.305"/>
</if>
<status status="PASS" starttime="20210602 19:30:36.305" endtime="20210602 19:30:36.305"/>
=======
<status status="PASS" starttime="20210604 03:28:08.286" endtime="20210604 03:28:08.287"/>
</kw>
<status status="PASS" starttime="20210604 03:28:08.286" endtime="20210604 03:28:08.287"/>
</branch>
<status status="PASS" starttime="20210604 03:28:08.286" endtime="20210604 03:28:08.287"/>
</if>
<status status="PASS" starttime="20210604 03:28:08.286" endtime="20210604 03:28:08.287"/>
>>>>>>> Stashed changes
</iter>
<iter>
<var name="${val}">5</var>
<if>
<branch type="IF" condition="${val} not in @{res}">
<kw name="Append To List" library="Collections">
<arg>${res}</arg>
<arg>${val}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<<<<<<< Updated upstream
<status status="PASS" starttime="20210602 19:30:36.306" endtime="20210602 19:30:36.306"/>
</kw>
<status status="PASS" starttime="20210602 19:30:36.306" endtime="20210602 19:30:36.306"/>
</branch>
<status status="PASS" starttime="20210602 19:30:36.306" endtime="20210602 19:30:36.306"/>
</if>
<status status="PASS" starttime="20210602 19:30:36.305" endtime="20210602 19:30:36.306"/>
=======
<status status="PASS" starttime="20210604 03:28:08.287" endtime="20210604 03:28:08.287"/>
</kw>
<status status="PASS" starttime="20210604 03:28:08.287" endtime="20210604 03:28:08.287"/>
</branch>
<status status="PASS" starttime="20210604 03:28:08.287" endtime="20210604 03:28:08.287"/>
</if>
<status status="PASS" starttime="20210604 03:28:08.287" endtime="20210604 03:28:08.287"/>
>>>>>>> Stashed changes
</iter>
<iter>
<var name="${val}">4</var>
<if>
<branch type="IF" condition="${val} not in @{res}">
<kw name="Append To List" library="Collections">
<arg>${res}</arg>
<arg>${val}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<<<<<<< Updated upstream
<status status="NOT RUN" starttime="20210602 19:30:36.306" endtime="20210602 19:30:36.306"/>
</kw>
<status status="NOT RUN" starttime="20210602 19:30:36.306" endtime="20210602 19:30:36.307"/>
</branch>
<status status="PASS" starttime="20210602 19:30:36.306" endtime="20210602 19:30:36.307"/>
</if>
<status status="PASS" starttime="20210602 19:30:36.306" endtime="20210602 19:30:36.307"/>
</iter>
<status status="PASS" starttime="20210602 19:30:36.303" endtime="20210602 19:30:36.307"/>
=======
<status status="NOT RUN" starttime="20210604 03:28:08.288" endtime="20210604 03:28:08.288"/>
</kw>
<status status="NOT RUN" starttime="20210604 03:28:08.288" endtime="20210604 03:28:08.288"/>
</branch>
<status status="PASS" starttime="20210604 03:28:08.287" endtime="20210604 03:28:08.288"/>
</if>
<status status="PASS" starttime="20210604 03:28:08.287" endtime="20210604 03:28:08.288"/>
</iter>
<status status="PASS" starttime="20210604 03:28:08.284" endtime="20210604 03:28:08.288"/>
>>>>>>> Stashed changes
</for>
<kw name="Log Many" library="BuiltIn">
<arg>@{res}</arg>
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<<<<<<< Updated upstream
<msg timestamp="20210602 19:30:36.307" level="INFO">2</msg>
<msg timestamp="20210602 19:30:36.307" level="INFO">4</msg>
<msg timestamp="20210602 19:30:36.307" level="INFO">1</msg>
<msg timestamp="20210602 19:30:36.307" level="INFO">5</msg>
<status status="PASS" starttime="20210602 19:30:36.307" endtime="20210602 19:30:36.307"/>
</kw>
<status status="PASS" starttime="20210602 19:30:36.301" endtime="20210602 19:30:36.307"/>
</kw>
<status status="PASS" starttime="20210602 19:30:36.301" endtime="20210602 19:30:36.307"/>
=======
<msg timestamp="20210604 03:28:08.288" level="INFO">2</msg>
<msg timestamp="20210604 03:28:08.288" level="INFO">4</msg>
<msg timestamp="20210604 03:28:08.288" level="INFO">1</msg>
<msg timestamp="20210604 03:28:08.288" level="INFO">5</msg>
<status status="PASS" starttime="20210604 03:28:08.288" endtime="20210604 03:28:08.288"/>
</kw>
<status status="PASS" starttime="20210604 03:28:08.283" endtime="20210604 03:28:08.288"/>
</kw>
<status status="PASS" starttime="20210604 03:28:08.283" endtime="20210604 03:28:08.288"/>
>>>>>>> Stashed changes
</test>
<test id="s1-s1-t4" name="List sum test">
<kw name="Get list sum">
<var>${sum}</var>
<arg>@{TestIntList}</arg>
<kw name="Import Library" library="BuiltIn">
<arg>Collections</arg>
<doc>Imports a library with the given name and optional arguments.</doc>
<<<<<<< Updated upstream
<status status="PASS" starttime="20210602 19:30:36.308" endtime="20210602 19:30:36.309"/>
=======
<status status="PASS" starttime="20210604 03:28:08.289" endtime="20210604 03:28:08.290"/>
>>>>>>> Stashed changes
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${sum}</var>
<arg>${0}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<<<<<<< Updated upstream
<msg timestamp="20210602 19:30:36.310" level="INFO">${sum} = 0</msg>
<status status="PASS" starttime="20210602 19:30:36.309" endtime="20210602 19:30:36.310"/>
=======
<msg timestamp="20210604 03:28:08.291" level="INFO">${sum} = 0</msg>
<status status="PASS" starttime="20210604 03:28:08.290" endtime="20210604 03:28:08.291"/>
>>>>>>> Stashed changes
</kw>
<for flavor="IN">
<var>${val}</var>
<value>@{list}</value>
<iter>
<var name="${val}">2</var>
<kw name="Evaluate" library="BuiltIn">
<var>${sum}</var>
<arg>${sum} + ${val}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<<<<<<< Updated upstream
<msg timestamp="20210602 19:30:36.310" level="INFO">${sum} = 2</msg>
<status status="PASS" starttime="20210602 19:30:36.310" endtime="20210602 19:30:36.311"/>
</kw>
<status status="PASS" starttime="20210602 19:30:36.310" endtime="20210602 19:30:36.311"/>
=======
<msg timestamp="20210604 03:28:08.291" level="INFO">${sum} = 2</msg>
<status status="PASS" starttime="20210604 03:28:08.291" endtime="20210604 03:28:08.291"/>
</kw>
<status status="PASS" starttime="20210604 03:28:08.291" endtime="20210604 03:28:08.291"/>
>>>>>>> Stashed changes
</iter>
<iter>
<var name="${val}">4</var>
<kw name="Evaluate" library="BuiltIn">
<var>${sum}</var>
<arg>${sum} + ${val}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<<<<<<< Updated upstream
<msg timestamp="20210602 19:30:36.311" level="INFO">${sum} = 6</msg>
<status status="PASS" starttime="20210602 19:30:36.311" endtime="20210602 19:30:36.311"/>
</kw>
<status status="PASS" starttime="20210602 19:30:36.311" endtime="20210602 19:30:36.311"/>
=======
<msg timestamp="20210604 03:28:08.292" level="INFO">${sum} = 6</msg>
<status status="PASS" starttime="20210604 03:28:08.291" endtime="20210604 03:28:08.292"/>
</kw>
<status status="PASS" starttime="20210604 03:28:08.291" endtime="20210604 03:28:08.292"/>
>>>>>>> Stashed changes
</iter>
<iter>
<var name="${val}">1</var>
<kw name="Evaluate" library="BuiltIn">
<var>${sum}</var>
<arg>${sum} + ${val}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<<<<<<< Updated upstream
<msg timestamp="20210602 19:30:36.312" level="INFO">${sum} = 7</msg>
<status status="PASS" starttime="20210602 19:30:36.311" endtime="20210602 19:30:36.312"/>
</kw>
<status status="PASS" starttime="20210602 19:30:36.311" endtime="20210602 19:30:36.312"/>
=======
<msg timestamp="20210604 03:28:08.292" level="INFO">${sum} = 7</msg>
<status status="PASS" starttime="20210604 03:28:08.292" endtime="20210604 03:28:08.292"/>
</kw>
<status status="PASS" starttime="20210604 03:28:08.292" endtime="20210604 03:28:08.292"/>
>>>>>>> Stashed changes
</iter>
<iter>
<var name="${val}">5</var>
<kw name="Evaluate" library="BuiltIn">
<var>${sum}</var>
<arg>${sum} + ${val}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<<<<<<< Updated upstream
<msg timestamp="20210602 19:30:36.313" level="INFO">${sum} = 12</msg>
<status status="PASS" starttime="20210602 19:30:36.312" endtime="20210602 19:30:36.313"/>
</kw>
<status status="PASS" starttime="20210602 19:30:36.312" endtime="20210602 19:30:36.313"/>
=======
<msg timestamp="20210604 03:28:08.293" level="INFO">${sum} = 12</msg>
<status status="PASS" starttime="20210604 03:28:08.292" endtime="20210604 03:28:08.293"/>
</kw>
<status status="PASS" starttime="20210604 03:28:08.292" endtime="20210604 03:28:08.293"/>
>>>>>>> Stashed changes
</iter>
<iter>
<var name="${val}">4</var>
<kw name="Evaluate" library="BuiltIn">
<var>${sum}</var>
<arg>${sum} + ${val}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<<<<<<< Updated upstream
<msg timestamp="20210602 19:30:36.313" level="INFO">${sum} = 16</msg>
<status status="PASS" starttime="20210602 19:30:36.313" endtime="20210602 19:30:36.313"/>
</kw>
<status status="PASS" starttime="20210602 19:30:36.313" endtime="20210602 19:30:36.313"/>
</iter>
<status status="PASS" starttime="20210602 19:30:36.310" endtime="20210602 19:30:36.313"/>
</for>
<msg timestamp="20210602 19:30:36.314" level="INFO">${sum} = 16</msg>
<status status="PASS" starttime="20210602 19:30:36.308" endtime="20210602 19:30:36.314"/>
=======
<msg timestamp="20210604 03:28:08.293" level="INFO">${sum} = 16</msg>
<status status="PASS" starttime="20210604 03:28:08.293" endtime="20210604 03:28:08.293"/>
</kw>
<status status="PASS" starttime="20210604 03:28:08.293" endtime="20210604 03:28:08.293"/>
</iter>
<status status="PASS" starttime="20210604 03:28:08.291" endtime="20210604 03:28:08.293"/>
</for>
<msg timestamp="20210604 03:28:08.295" level="INFO">${sum} = 16</msg>
<status status="PASS" starttime="20210604 03:28:08.289" endtime="20210604 03:28:08.295"/>
>>>>>>> Stashed changes
</kw>
<kw name="Log" library="BuiltIn">
<arg>Сумма значений заданного списка равна ${sum}</arg>
<doc>Logs the given message with the given level.</doc>
<<<<<<< Updated upstream
<msg timestamp="20210602 19:30:36.314" level="INFO">Сумма значений заданного списка равна 16</msg>
<status status="PASS" starttime="20210602 19:30:36.314" endtime="20210602 19:30:36.314"/>
</kw>
<status status="PASS" starttime="20210602 19:30:36.308" endtime="20210602 19:30:36.314"/>
</test>
<status status="PASS" starttime="20210602 19:30:36.269" endtime="20210602 19:30:36.315"/>
=======
<msg timestamp="20210604 03:28:08.296" level="INFO">Сумма значений заданного списка равна 16</msg>
<status status="PASS" starttime="20210604 03:28:08.296" endtime="20210604 03:28:08.296"/>
</kw>
<status status="PASS" starttime="20210604 03:28:08.289" endtime="20210604 03:28:08.296"/>
</test>
<status status="PASS" starttime="20210604 03:28:08.255" endtime="20210604 03:28:08.297"/>
>>>>>>> Stashed changes
</suite>
<suite id="s1-s2" name="Temperature" source="G:\Nexign\RobotFramework1\Temperature.robot">
<test id="s1-s2-t1" name="Check temperature convertion formula">
<kw name="Import Library" library="BuiltIn">
<arg>Collections</arg>
<doc>Imports a library with the given name and optional arguments.</doc>
<<<<<<< Updated upstream
<status status="PASS" starttime="20210602 19:30:36.322" endtime="20210602 19:30:36.323"/>
=======
<status status="PASS" starttime="20210604 03:28:08.304" endtime="20210604 03:28:08.305"/>
>>>>>>> Stashed changes
</kw>
<for flavor="IN">
<var>${temperature}</var>
<value>@{Temperatures}</value>
<iter>
<var name="${temperature}">0</var>
<kw name="Convert Celsius to Fahrenheit">
<var>${val}</var>
<arg>${temperature}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${fahrenheit_temp}</var>
<arg>${9/5} * ${celsius_temp} + ${32}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<<<<<<< Updated upstream
<msg timestamp="20210602 19:30:36.325" level="INFO">${fahrenheit_temp} = 32.0</msg>
<status status="PASS" starttime="20210602 19:30:36.323" endtime="20210602 19:30:36.325"/>
</kw>
<msg timestamp="20210602 19:30:36.325" level="INFO">${val} = 32.0</msg>
<status status="PASS" starttime="20210602 19:30:36.323" endtime="20210602 19:30:36.325"/>
=======
<msg timestamp="20210604 03:28:08.307" level="INFO">${fahrenheit_temp} = 32.0</msg>
<status status="PASS" starttime="20210604 03:28:08.305" endtime="20210604 03:28:08.307"/>
</kw>
<msg timestamp="20210604 03:28:08.307" level="INFO">${val} = 32.0</msg>
<status status="PASS" starttime="20210604 03:28:08.305" endtime="20210604 03:28:08.307"/>
>>>>>>> Stashed changes
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${val}</arg>
<arg>${Temperature_pairs}[${temperature}]</arg>
<doc>Fails if the given objects are unequal.</doc>
<<<<<<< Updated upstream
<msg timestamp="20210602 19:30:36.325" level="INFO">Argument types are:
&lt;class 'float'&gt;
&lt;class 'int'&gt;</msg>
<status status="PASS" starttime="20210602 19:30:36.325" endtime="20210602 19:30:36.325"/>
</kw>
<status status="PASS" starttime="20210602 19:30:36.323" endtime="20210602 19:30:36.325"/>
=======
<msg timestamp="20210604 03:28:08.307" level="INFO">Argument types are:
&lt;class 'float'&gt;
&lt;class 'int'&gt;</msg>
<status status="PASS" starttime="20210604 03:28:08.307" endtime="20210604 03:28:08.307"/>
</kw>
<status status="PASS" starttime="20210604 03:28:08.305" endtime="20210604 03:28:08.307"/>
>>>>>>> Stashed changes
</iter>
<iter>
<var name="${temperature}">350</var>
<kw name="Convert Celsius to Fahrenheit">
<var>${val}</var>
<arg>${temperature}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${fahrenheit_temp}</var>
<arg>${9/5} * ${celsius_temp} + ${32}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<<<<<<< Updated upstream
<msg timestamp="20210602 19:30:36.327" level="INFO">${fahrenheit_temp} = 662.0</msg>
<status status="PASS" starttime="20210602 19:30:36.326" endtime="20210602 19:30:36.327"/>
</kw>
<msg timestamp="20210602 19:30:36.327" level="INFO">${val} = 662.0</msg>
<status status="PASS" starttime="20210602 19:30:36.325" endtime="20210602 19:30:36.327"/>
=======
<msg timestamp="20210604 03:28:08.309" level="INFO">${fahrenheit_temp} = 662.0</msg>
<status status="PASS" starttime="20210604 03:28:08.308" endtime="20210604 03:28:08.309"/>
</kw>
<msg timestamp="20210604 03:28:08.309" level="INFO">${val} = 662.0</msg>
<status status="PASS" starttime="20210604 03:28:08.308" endtime="20210604 03:28:08.309"/>
>>>>>>> Stashed changes
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${val}</arg>
<arg>${Temperature_pairs}[${temperature}]</arg>
<doc>Fails if the given objects are unequal.</doc>
<<<<<<< Updated upstream
<msg timestamp="20210602 19:30:36.328" level="INFO">Argument types are:
&lt;class 'float'&gt;
&lt;class 'int'&gt;</msg>
<status status="PASS" starttime="20210602 19:30:36.327" endtime="20210602 19:30:36.328"/>
</kw>
<status status="PASS" starttime="20210602 19:30:36.325" endtime="20210602 19:30:36.329"/>
=======
<msg timestamp="20210604 03:28:08.310" level="INFO">Argument types are:
&lt;class 'float'&gt;
&lt;class 'int'&gt;</msg>
<status status="PASS" starttime="20210604 03:28:08.309" endtime="20210604 03:28:08.310"/>
</kw>
<status status="PASS" starttime="20210604 03:28:08.307" endtime="20210604 03:28:08.310"/>
>>>>>>> Stashed changes
</iter>
<iter>
<var name="${temperature}">-32</var>
<kw name="Convert Celsius to Fahrenheit">
<var>${val}</var>
<arg>${temperature}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${fahrenheit_temp}</var>
<arg>${9/5} * ${celsius_temp} + ${32}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<<<<<<< Updated upstream
<msg timestamp="20210602 19:30:36.331" level="INFO">${fahrenheit_temp} = -25.6</msg>
<status status="PASS" starttime="20210602 19:30:36.330" endtime="20210602 19:30:36.331"/>
</kw>
<msg timestamp="20210602 19:30:36.332" level="INFO">${val} = -25.6</msg>
<status status="PASS" starttime="20210602 19:30:36.329" endtime="20210602 19:30:36.332"/>
=======
<msg timestamp="20210604 03:28:08.313" level="INFO">${fahrenheit_temp} = -25.6</msg>
<status status="PASS" starttime="20210604 03:28:08.311" endtime="20210604 03:28:08.313"/>
</kw>
<msg timestamp="20210604 03:28:08.313" level="INFO">${val} = -25.6</msg>
<status status="PASS" starttime="20210604 03:28:08.310" endtime="20210604 03:28:08.313"/>
>>>>>>> Stashed changes
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${val}</arg>
<arg>${Temperature_pairs}[${temperature}]</arg>
<doc>Fails if the given objects are unequal.</doc>
<<<<<<< Updated upstream
<status status="PASS" starttime="20210602 19:30:36.332" endtime="20210602 19:30:36.332"/>
</kw>
<status status="PASS" starttime="20210602 19:30:36.329" endtime="20210602 19:30:36.332"/>
=======
<status status="PASS" starttime="20210604 03:28:08.313" endtime="20210604 03:28:08.314"/>
</kw>
<status status="PASS" starttime="20210604 03:28:08.310" endtime="20210604 03:28:08.314"/>
>>>>>>> Stashed changes
</iter>
<iter>
<var name="${temperature}">100</var>
<kw name="Convert Celsius to Fahrenheit">
<var>${val}</var>
<arg>${temperature}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${fahrenheit_temp}</var>
<arg>${9/5} * ${celsius_temp} + ${32}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<<<<<<< Updated upstream
<msg timestamp="20210602 19:30:36.334" level="INFO">${fahrenheit_temp} = 212.0</msg>
<status status="PASS" starttime="20210602 19:30:36.333" endtime="20210602 19:30:36.334"/>
</kw>
<msg timestamp="20210602 19:30:36.334" level="INFO">${val} = 212.0</msg>
<status status="PASS" starttime="20210602 19:30:36.332" endtime="20210602 19:30:36.334"/>
=======
<msg timestamp="20210604 03:28:08.315" level="INFO">${fahrenheit_temp} = 212.0</msg>
<status status="PASS" starttime="20210604 03:28:08.314" endtime="20210604 03:28:08.315"/>
</kw>
<msg timestamp="20210604 03:28:08.316" level="INFO">${val} = 212.0</msg>
<status status="PASS" starttime="20210604 03:28:08.314" endtime="20210604 03:28:08.316"/>
>>>>>>> Stashed changes
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${val}</arg>
<arg>${Temperature_pairs}[${temperature}]</arg>
<doc>Fails if the given objects are unequal.</doc>
<<<<<<< Updated upstream
<msg timestamp="20210602 19:30:36.335" level="INFO">Argument types are:
&lt;class 'float'&gt;
&lt;class 'int'&gt;</msg>
<status status="PASS" starttime="20210602 19:30:36.334" endtime="20210602 19:30:36.335"/>
</kw>
<status status="PASS" starttime="20210602 19:30:36.332" endtime="20210602 19:30:36.335"/>
</iter>
<status status="PASS" starttime="20210602 19:30:36.323" endtime="20210602 19:30:36.335"/>
</for>
<status status="PASS" starttime="20210602 19:30:36.321" endtime="20210602 19:30:36.335"/>
</test>
<status status="PASS" starttime="20210602 19:30:36.315" endtime="20210602 19:30:36.335"/>
</suite>
<status status="PASS" starttime="20210602 19:30:36.235" endtime="20210602 19:30:36.337"/>
</suite>
<statistics>
<total>
<stat pass="5" fail="0" skip="0">All Tests</stat>
=======
<msg timestamp="20210604 03:28:08.316" level="INFO">Argument types are:
&lt;class 'float'&gt;
&lt;class 'int'&gt;</msg>
<status status="PASS" starttime="20210604 03:28:08.316" endtime="20210604 03:28:08.316"/>
</kw>
<status status="PASS" starttime="20210604 03:28:08.314" endtime="20210604 03:28:08.316"/>
</iter>
<status status="PASS" starttime="20210604 03:28:08.305" endtime="20210604 03:28:08.316"/>
</for>
<status status="PASS" starttime="20210604 03:28:08.304" endtime="20210604 03:28:08.316"/>
</test>
<status status="PASS" starttime="20210604 03:28:08.297" endtime="20210604 03:28:08.317"/>
</suite>
<status status="PASS" starttime="20210604 03:28:07.456" endtime="20210604 03:28:08.317"/>
</suite>
<statistics>
<total>
<stat pass="10" fail="0" skip="0">All Tests</stat>
>>>>>>> Stashed changes
</total>
<tag>
</tag>
<suite>
<<<<<<< Updated upstream
<stat pass="5" fail="0" skip="0" id="s1" name="RobotFramework1">RobotFramework1</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1" name="Task one">RobotFramework1.Task one</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Temperature">RobotFramework1.Temperature</stat>
=======
<stat pass="10" fail="0" skip="0" id="s1" name="RobotFramework1">RobotFramework1</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1" name="Homework2">RobotFramework1.Homework2</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2" name="Homework3">RobotFramework1.Homework3</stat>
<stat pass="4" fail="0" skip="0" id="s1-s3" name="Task one">RobotFramework1.Task one</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Temperature">RobotFramework1.Temperature</stat>
>>>>>>> Stashed changes
</suite>
</statistics>
<errors>
</errors>
</robot>
